- name: create private key on host
  copy:
    src: "{{ ssh_key }}"
    dest: /root/.ssh/id_rsa
    owner: root
    group: root
    mode: 0400

- name: set infra_node facts
  set_fact:
    infra_node: "{{ hostvars[groups[item.username + '_nodes'][0]] }}"
  with_items: "{{ users }}"
  when: "{{ inventory_hostname in groups[item.username + '_masters'] }}"

- name: deploy ocp install template
  template:
    src: ocp-install.yml.j2
    dest: /tmp/ocp-install.yml
  with_items: "{{ users }}"
  when: "{{ inventory_hostname in groups[item.username + '_masters'] }}"

- name: deploy OpenShift
  command: atomic-openshift-installer -u -c /tmp/ocp-install.yml install

# - name: create htpasswd file
#   template:
#     src: htpasswd
#     dest: "{{ htpasswd_file }}"
#     owner: root
#     group: root
#     mode: 0644

- name: add htpasswd auth method to openshift config
  lineinfile:
    regexp: 'DenyAllPasswordIdentityProvider'
    line: '      kind: HTPasswdPasswordIdentityProvider'
    dest: /etc/origin/master/master-config.yaml

- name: add htpasswd file reference to openshift config
  lineinfile:
    insertafter: '     kind: HTPasswdPasswordIdentityProvider'
    line: '      file: {{ htpasswd_file }}'
    dest: /etc/origin/master/master-config.yaml

- name: create admin user in htpasswd
  shell: echo {{ admin_user_password }} | htpasswd -i -c {{ htpasswd_file }} admin

- name: create lab user for each student in htpasswd
  shell: echo {{ lab_user_password }} | htpasswd -i -c {{ htpasswd_file }} {{ item.username }}
  with_items: "{{ users }}"
  when: "{{ inventory_hostname in groups[item.username + '_masters'] }}"

- name: setup nip.io domain
  lineinfile:
    regexp: 'subdomain:'
    line: "  subdomain: '{{ hostvars[groups[item.username + '_nodes'][0]]['ansible_ec2_public_ipv4'] + '.nip.io' }}'"
    dest: /etc/origin/master/master-config.yaml
  with_items: "{{ users }}"
  when: "{{ inventory_hostname in groups[item.username + '_masters'] }}"

- name: restart openshift services
  service:
    state: restarted
    name: "{{ item }}"
  with_items:
    - atomic-openshift-master.service
    - atomic-openshift-node-dep.service
    - atomic-openshift-node.service

- name: give admin user cluster-admin access for OCP
  command: /usr/local/bin/oadm policy add-cluster-role-to-user cluster-admin admin
